http {
    # 定义三个负载均衡池，每个对应一个微服务
    upstream service1 {
        server localhost:8001;  # 微服务1
    }
    upstream service2 {
        server localhost:8002;  # 微服务2
    }
    upstream service3 {
        server localhost:8003;  # 微服务3
    }

<<<<<<< HEAD
    server {  
        listen 80;  
        server_name localhost;  # 在本地开发时使用127.0.0.1

        # 代理所有请求到单个Django实例（例如 127.0.0.1:8000）
        location / {  
            proxy_pass http://Questionnaire;
            # proxy_pass http://127.0.0.1:8000;  
=======
    server {
        listen 80;
        server_name localhost;

        # 根据不同的URL前缀将请求路由到不同的微服务
        location /personal {
            proxy_pass http://service1;
>>>>>>> cd5ad0e1654c9d5ca49d6b30fa73ac08b6562461
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /user {
            proxy_pass http://service1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /userManage {
            proxy_pass http://service2;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /survey {
            proxy_pass http://service2;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /questionnaireDesign {
            proxy_pass http://service3;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /questionnaireFill {
            proxy_pass http://service3;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /normalAnswer {
            proxy_pass http://service3;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /testAnswer {
            proxy_pass http://service3;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /dataPre {
            proxy_pass http://service3;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /edition {
            proxy_pass http://service3;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
