name: Python CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  remote-build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup SSH
        uses: appleboy/ssh-action@master
        with:
          host: 82.156.88.4
          username: ubuntu
          password: BUaa2221
          key: ${{ secrets.SSH_KEY }}

      - name: Install Updates and Basic Tools
        uses: appleboy/ssh-action@master
        with:
          host: 82.156.88.4
          username: ubuntu
          password: BUaa2221
          key: ${{ secrets.SSH_KEY }}
          script: |
            if ! command -v git &> /dev/null; then
              echo "Git not found. Installing Git..."
              sudo apt-get update
              sudo apt-get install -y git
            fi

      - name: Install Docker
        uses: appleboy/ssh-action@master
        with:
          host: 82.156.88.4
          username: ubuntu
          password: BUaa2221
          key: ${{ secrets.SSH_KEY }}
          script: |
            if ! command -v docker &> /dev/null; then
              echo "Docker not found. Installing Docker..."
              sudo apt-get install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
            fi

      - name: Install Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: 82.156.88.4
          username: ubuntu
          password: BUaa2221
          key: ${{ secrets.SSH_KEY }}
          script: |
            if ! docker compose version &> /dev/null; then
              echo "docker-compose-plugin not found. Installing docker-compose-plugin..."
              sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
              sudo apt  install docker-compose 
            fi

      - name: Prepare Application Environment
        uses: appleboy/ssh-action@master
        with:
          host: 82.156.88.4
          username: ubuntu
          password: BUaa2221
          key: ${{ secrets.SSH_KEY }}
          script: |
            # if [ -d "PaperWingsCarryingQuestions_Advanced" ]; then
            #   cd PaperWingsCarryingQuestions_Advanced
            #   git pull
            #   cd ..
            # else
            #   git clone https://github.com/sweetlunar233/PaperWingsCarryingQuestions_Advanced.git
            # fi
            cd PaperWingsCarryingQuestions_Advanced
            cd Questionnaire
            sudo npm install
            sudo npm run build
            cd ..

            cd new_Questionnaire_backend
            sudo pip install mysqlclient
            cd ..
            
            sudo docker-compose build

            # sudo docker tag questionnaire-app tiezhugiegie/questionnaire-app
            # sudo docker tag my-edition-db tiezhugiegie/my-edition-db
            # sudo docker tag my-management-db tiezhugiegie/my-management-db
            # sudo docker tag my-user-db tiezhugiegie/my-user-db
            # sudo docker tag my-edition-back tiezhugiegie/my-edition-back
            # sudo docker tag my-management-back tiezhugiegie/my-management-back
            # sudo docker tag my-user-back tiezhugiegie/my-user-back

            # sudo docker push tiezhugiegie/questionnaire-app
            # sudo docker push tiezhugiegie/my-edition-db
            # sudo docker push tiezhugiegie/my-management-db
            # sudo docker push tiezhugiegie/my-user-db
            # sudo docker push tiezhugiegie/my-edition-back
            # sudo docker push tiezhugiegie/my-management-back
            # sudo docker push tiezhugiegie/my-user-back

            
            sudo kubectl create namespace zhiyi
            
            sudo kubectl apply -f ~/PaperWingsCarryingQuestions_Advanced/for-docker-advanced/db/standard-sc.yaml
            sudo kubectl apply -f ~/PaperWingsCarryingQuestions_Advanced/for-docker-advanced/front-deployment.yml
            sudo kubectl apply -f ~/PaperWingsCarryingQuestions_Advanced/for-docker-advanced/my-edition-back-deployment.yaml
            sudo kubectl apply -f ~/PaperWingsCarryingQuestions_Advanced/for-docker-advanced/my-management-back-deployment.yaml
            sudo kubectl apply -f ~/PaperWingsCarryingQuestions_Advanced/for-docker-advanced/my-user-back-deployment.yaml
            sudo kubectl apply -f ~/PaperWingsCarryingQuestions_Advanced/for-docker-advanced/db/my-edition-db-statefulset.yaml
            sudo kubectl apply -f ~/PaperWingsCarryingQuestions_Advanced/for-docker-advanced/db/my-management-db-statefulset.yaml
            sudo kubectl apply -f ~/PaperWingsCarryingQuestions_Advanced/for-docker-advanced/db/my-user-db-statefulset.yaml


            sudo kubectl apply -f ~/PaperWingsCarryingQuestions_Advanced/for-docker-advanced/my-edition-back-service.yaml
            sudo kubectl apply -f ~/PaperWingsCarryingQuestions_Advanced/for-docker-advanced/my-management-back-service.yaml
            sudo kubectl apply -f ~/PaperWingsCarryingQuestions_Advanced/for-docker-advanced/my-user-back-service.yaml
            sudo kubectl apply -f ~/PaperWingsCarryingQuestions_Advanced/for-docker-advanced/db/my-edition-db-service.yaml
            sudo kubectl apply -f ~/PaperWingsCarryingQuestions_Advanced/for-docker-advanced/db/my-management-db-service.yaml
            sudo kubectl apply -f ~/PaperWingsCarryingQuestions_Advanced/for-docker-advanced/db/my-user-db-service.yaml

            sudo kubectl apply -f ~/PaperWingsCarryingQuestions_Advanced/HPA-VPA/my_edition_back_hpa.yaml
            sudo kubectl apply -f ~/PaperWingsCarryingQuestions_Advanced/HPA-VPA/my_management_back_hpa.yaml
            sudo kubectl apply -f ~/PaperWingsCarryingQuestions_Advanced/HPA-VPA/my_user_back_hpa.yaml
            sudo kubectl apply -f ~/PaperWingsCarryingQuestions_Advanced/HPA-VPA/questionnaire-app_hpa.yaml

            echo "\n\n\n --------------test----------------- \n\n\n"

            sudo kubectl exec $(sudo kubectl get pods -n zhiyi -l app=my-user-back -o jsonpath='{.items[0].metadata.name}') -n zhiyi -- python3 manage.py test
            sudo kubectl exec $(sudo kubectl get pods -n zhiyi -l app=my-management-back -o jsonpath='{.items[0].metadata.name}') -n zhiyi -- python3 manage.py test
            sudo kubectl exec $(sudo kubectl get pods -n zhiyi -l app=my-edition-back -o jsonpath='{.items[0].metadata.name}') -n zhiyi -- python3 manage.py test



          # # 部署到 Kubernetes
          # - name: Deploy to Kubernetes
          #   run: |
          #     kubectl apply -f k8s/  # 应用
          